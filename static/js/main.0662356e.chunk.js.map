{"version":3,"sources":["imgs/banner.jpg","whitepaper/Whitepaper_ROASc-Draft-4.pdf","components/structural/section.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","sectionType","Section","getClassname","ret","props","type","banner","className","this","style","backgroundImage","bannerImage","children","Component","pdf","require","App","Navbar","bg","variant","Container","Brand","href","Collapse","Text","target","rel","Row","Col","MemoryOutlined","BeenhereOutlined","SupervisorAccountOutlined","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"kGAAAA,EAAOC,QAAU,IAA0B,oC,sHCA3CD,EAAOC,QAAU,IAA0B,sD,2CCE/BC,E,iMAAAA,O,eAAAA,I,oBAAAA,M,KAKL,IA0BQC,EA1Bf,4MAYIC,aAAe,WACX,IAAIC,EAAM,WACV,OAAQ,EAAKC,MAAMC,MACf,KAAKL,EAAYM,OACbH,GAAO,0BACP,MACJ,QACIA,GAAO,mBAGf,MAAM,GAAN,OAAUA,EAAV,YAAiB,EAAKC,MAAMG,YAtBpC,uDAEQ,OACI,yBAAKA,UAAWC,KAAKN,eAAgBO,MAAO,CAAEC,gBAAgB,OAAD,OAASF,KAAKJ,MAAMO,YAApB,OACzD,yBAAKJ,UAAU,SACVC,KAAKJ,MAAMQ,eALhC,GAA6BC,a,iBCDvBC,EAAMC,EAAQ,IAkELC,MA9Df,WACE,OACE,yBAAKT,UAAU,OACb,4BAAQA,UAAU,cAChB,kBAACU,EAAA,EAAD,CAAQC,GAAG,OAAOC,QAAQ,QACxB,kBAACC,EAAA,EAAD,KACE,kBAACH,EAAA,EAAOI,MAAR,CAAcC,KAAK,SAAnB,SAGA,kBAACL,EAAA,EAAOM,SAAR,CAAiBhB,UAAU,uBACzB,kBAACU,EAAA,EAAOO,KAAR,KACE,uBACEF,KAAMR,EACNW,OAAO,SACPC,IAAI,uBAHN,4BAaV,kBAAC,EAAD,CAASrB,KAAML,EAAYM,OAAQK,YAAaA,KAC9C,yBAAKJ,UAAU,eACb,4EACA,kBAAC,EAAD,KACE,kBAACoB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAgBtB,UAAU,gBAC1B,4DACA,uBAAGA,UAAU,aAAb,iCACF,kBAACqB,EAAA,EAAD,KACE,kBAACE,EAAA,EAAD,CAAkBvB,UAAU,gBAAgB,qDAC5C,uBAAGA,UAAU,aAAb,qDAEF,kBAACqB,EAAA,EAAD,KACE,kBAACG,EAAA,EAAD,CAA2BxB,UAAU,gBACrC,iDACA,uBAAGA,UAAU,aAAb,yCAKN,uBACEA,UAAU,uCACVe,KAAMR,EACNW,OAAO,SACPC,IAAI,uBAJN,yBAUJ,kBAAC,EAAD,CAASnB,UAAU,eAAnB,UCrDcyB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCDNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SD8GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAACC,GACLA,EAAaC,gBAEdC,OAAM,SAACC,GACNC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.0662356e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/banner.d9137093.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Whitepaper_ROASc-Draft-4.2e68aeef.pdf\";","import React, { Component } from 'react'\r\nimport './section.scss';\r\nexport enum sectionType {\r\n    full,\r\n    banner\r\n}\r\ntype Props = { children: any, className?: any; type?: sectionType, bannerImage?: any; }\r\nexport class Section extends Component<Props> {\r\n    render() {\r\n        return (\r\n            <div className={this.getClassname()} style={{ backgroundImage: `url(${this.props.bannerImage})` }}>\r\n                <div className=\"inner\">\r\n                    {this.props.children}\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n    getClassname = () => {\r\n        let ret = \"section \";\r\n        switch (this.props.type) {\r\n            case sectionType.banner:\r\n                ret += \"container-fluid banner \";\r\n                break;\r\n            default:\r\n                ret += \"mt-5  container \";\r\n        }\r\n\r\n        return `${ret} ${this.props.className}`;\r\n    }\r\n}\r\n\r\nexport default Section\r\n","import React from 'react';\r\nimport { Navbar, Container, Row, Col } from 'react-bootstrap';\r\nimport { BeenhereOutlined, MemoryOutlined, SupervisorAccountOutlined } from '@material-ui/icons';\r\nimport './App.scss';\r\nimport Section, { sectionType } from './components/structural/section';\r\nimport bannerImage from './imgs/banner.jpg';\r\nconst pdf = require('./whitepaper/Whitepaper_ROASc-Draft-4.pdf');\r\n\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <Navbar bg=\"dark\" variant=\"dark\">\r\n          <Container>\r\n            <Navbar.Brand href=\"#home\">\r\n              ROASc\r\n            </Navbar.Brand>\r\n            <Navbar.Collapse className=\"justify-content-end\">\r\n              <Navbar.Text>\r\n                <a\r\n                  href={pdf}\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                >\r\n                  Read the Whitepaper\r\n                </a>\r\n              </Navbar.Text>\r\n            </Navbar.Collapse>\r\n          </Container>\r\n        </Navbar>\r\n\r\n      </header>\r\n      <Section type={sectionType.banner} bannerImage={bannerImage}>\r\n        <div className=\"text-center\">\r\n          <h1>Record of achievement Smart Contract (ROASc)</h1>\r\n          <Section>\r\n            <Row>\r\n              <Col>\r\n                <MemoryOutlined className=\"banner-icon\" />\r\n                <h3>Institutional Citizen memory</h3>\r\n                <p className=\"sub-title\">Event based, provable memory</p></Col>\r\n              <Col>\r\n                <BeenhereOutlined className=\"banner-icon\" /><h3>Record of achievement</h3>\r\n                <p className=\"sub-title\">Non-interferable peer to peer achievement ledger</p>\r\n              </Col>\r\n              <Col>\r\n                <SupervisorAccountOutlined className=\"banner-icon\" />\r\n                <h3>Inheritable asset</h3>\r\n                <p className=\"sub-title\">Educational funding or inheritance</p>\r\n              </Col>\r\n            </Row>\r\n          </Section>\r\n\r\n          <a\r\n            className=\" btn btn-outline-primary btn-rounded\"\r\n            href={pdf}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            Read the Whitepaper\r\n        </a>\r\n        </div>\r\n      </Section>\r\n      <Section className=\"text-center\">\r\ntest\r\n      </Section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config: any) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: any, config: any) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: any, config: any) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { \"Service-Worker\": \"script\" },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport 'bootstrap/js/dist/dropdown';\r\nimport 'bootstrap/js/dist/collapse';\r\nimport 'bootstrap/js/dist/carousel';\r\nimport 'bootstrap/js/dist/util';\r\nimport 'bootstrap/js/dist/modal';\r\n\r\n\r\nimport 'jquery';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}